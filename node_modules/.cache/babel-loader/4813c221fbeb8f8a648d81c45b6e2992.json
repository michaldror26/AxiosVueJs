{"remainingRequest":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/thread-loader/dist/cjs.js!/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/babel-loader/lib/index.js!/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/src/store.js","dependencies":[{"path":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/src/store.js","mtime":1533625965761},{"path":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/cache-loader/dist/cjs.js","mtime":1533453108667},{"path":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    counter: 0,\n    value: 0\n  },\n  getters: {\n    doubleCounter: function doubleCounter(state) {\n      return state.counter * 2;\n    },\n    stringCounter: function stringCounter(state) {\n      return state.counter + ' clicked';\n    },\n    value: function value(state) {\n      return state.value;\n    }\n  },\n  mutations: {\n    increment: function increment(state, payload) {\n      state.counter += payload;\n    },\n    decrement: function decrement(state, payload) {\n      state.counter -= payload;\n    },\n    updateValue: function updateValue(state, payload) {\n      state.value = payload;\n    }\n  },\n  actions: {\n    increment: function increment(_ref, payload) {\n      var commit = _ref.commit;\n      setTimeout(function () {\n        commit('increment', payload.by);\n      }, payload.dur);\n    },\n    decrement: function decrement(context, payload) {\n      context.commit('decrement', payload);\n    },\n    updateValue: function updateValue(context, payload) {\n      context.commit('updateValue', payload);\n    }\n  },\n  modules: {}\n});",{"version":3,"sources":["src/store.js"],"names":["Vue","Vuex","use","Store","state","counter","value","getters","doubleCounter","stringCounter","mutations","increment","payload","decrement","updateValue","actions","commit","setTimeout","by","dur","context","modules"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,IAAIE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,KAAKE,KAAT,CAAe;AAC1BC,SAAO;AACHC,aAAS,CADN;AAEHC,WAAO;AAFJ,GADmB;AAK1BC,WAAS;AACLC,mBAAe,8BAAS;AACpB,aAAOJ,MAAMC,OAAN,GAAgB,CAAvB;AACH,KAHI;AAILI,mBAAe,8BAAS;AACpB,aAAOL,MAAMC,OAAN,GAAgB,UAAvB;AACH,KANI;AAOLC,WAAO,sBAAS;AACZ,aAAOF,MAAME,KAAb;AACH;AATI,GALiB;AAgB1BI,aAAW;AACPC,eAAW,mBAACP,KAAD,EAAQQ,OAAR,EAAoB;AAC3BR,YAAMC,OAAN,IAAiBO,OAAjB;AACH,KAHM;AAIPC,eAAW,mBAACT,KAAD,EAAQQ,OAAR,EAAoB;AAC3BR,YAAMC,OAAN,IAAiBO,OAAjB;AACH,KANM;AAOPE,iBAAa,qBAACV,KAAD,EAAQQ,OAAR,EAAoB;AAC7BR,YAAME,KAAN,GAAcM,OAAd;AACH;AATM,GAhBe;AA2B1BG,WAAS;AACLJ,eAAW,yBAAWC,OAAX,EAAuB;AAAA,UAArBI,MAAqB,QAArBA,MAAqB;AAC9BC,iBAAW,YAAM;AACbD,eAAO,WAAP,EAAoBJ,QAAQM,EAA5B;AACH,OAFD,EAEGN,QAAQO,GAFX;AAIH,KANI;AAOLN,eAAW,mBAACO,OAAD,EAAUR,OAAV,EAAsB;AAC7BQ,cAAQJ,MAAR,CAAe,WAAf,EAA4BJ,OAA5B;AACH,KATI;AAULE,iBAAa,qBAACM,OAAD,EAAUR,OAAV,EAAsB;AAC/BQ,cAAQJ,MAAR,CAAe,aAAf,EAA8BJ,OAA9B;AACH;AAZI,GA3BiB;AAyC1BS,WAAQ;AAzCkB,CAAf,CAAf","sourceRoot":"/var/www/html/michaldror_Vue/my-project-md/second-project-VueJs---practicing","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        counter: 0,\n        value: 0\n    },\n    getters: {\n        doubleCounter: state => {\n            return state.counter * 2;\n        },\n        stringCounter: state => {\n            return state.counter + ' clicked';\n        },\n        value: state => {\n            return state.value;\n        }\n    },\n    mutations: {\n        increment: (state, payload) => {\n            state.counter += payload;\n        },\n        decrement: (state, payload) => {\n            state.counter -= payload;\n        },\n        updateValue: (state, payload) => {\n            state.value = payload;\n        }\n    },\n    actions: {\n        increment: ({commit}, payload) => {\n            setTimeout(() => {\n                commit('increment', payload.by);\n            }, payload.dur)\n\n        },\n        decrement: (context, payload) => {\n            context.commit('decrement', payload);\n        },\n        updateValue: (context, payload) => {\n            context.commit('updateValue', payload);\n        }\n    },\n    modules:{\n\n    },\n})"]}]}